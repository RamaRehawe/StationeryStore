@{
    ViewData["Title"] = "لوحة تحكم المدير";
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>لوحة تحكم المدير</title>
    <link rel="stylesheet" href="~/CSS/Styles.css">
    <link rel="icon" href="~/Images/ICO.png" type="image/png">
    <script src="~/Javascript/Functions.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>

<body>
    <a href="front_home">
        <img class="logo" src="~/Images/logo.png" alt="logo">
    </a>
    <div class="logout-icon">
        <a onclick="logout()" id="logoutLink">
            <img src="~/Images/log-out.png" alt="Logout">
            <span id="logout-text"> تسجيل الخروج</span>
        </a>
    </div>
    <main>
        <div id="sidebar">
            <a href="#section2" onclick="showSection('section2')">إضافة عاملين في المتجر</a>
            <a href="#section3" onclick="showSection('section3')">عرض المستخدمين</a>
            <a href="#section4" onclick="showSection('section4')">عرض جميع الطلبات</a>
            <a href="#section5" onclick="showSection('section5')">عرض جميع المنتجات</a>
            <a href="#section6" onclick="showSection('section6')">الشكاوي و الاستفسارات</a>
            <a href="#section7" onclick="showSection('section7')">تحليل البيانات</a>
            <a href="#section8" onclick="showSection('section8')">تعديل معلومات المتجر</a>
        </div>
        <div id="content">
            <div id="section1" class="section active-section">
                <h2>أهلاً بك</h2>
                <p>نحن فخورون بأن نقدم لكم متجرنا الإلكتروني للقرطاسية، حيث يديره فريق من المحترفين بقيادة المدير الخبير.</p>
                <p>يعمل المدير جاهدًا لضمان توفير تشكيلة واسعة من المنتجات عالية الجودة، ويسعى دائمًا لتلبية احتياجات عملائنا الكرام. بفضل خبرته الواسعة في مجال القرطاسية، يقوم بالإشراف على تحديث المخزون بانتظام وضمان جاهزية المنتجات.</p>
                <p>نحن نفتخر بتوفير تجربة تسوق سلسة ومرضية، ونشجعكم دائمًا على التواصل مع المدير لأي استفسارات أو اقتراحات. نتمنى لكم تجربة تسوق ممتعة!</p>
                <img class="first-img" src="~/Images/admin.jpg" alt="صورة تعبيرية عن عمل المدير في متجر الكتروني للقرطاسية">
            </div>
            <div id="section2" class="section">
                <h1>إضافة عاملين في المتجر</h1>
                <form>
                    <label for="managerName">الاسم:</label>
                    <input type="text" id="managerName" name="managerName" required>

                    <label for="managerPassword">كلمة المرور:</label>
                    <input type="password" id="managerPassword" name="managerPassword" required>

                    <label for="managerConfirmPassword">تأكيد كلمة المرور:</label>
                    <input type="password" id="managerConfirmPassword" name="managerConfirmPassword" required>

                    <label for="managerEmail">البريد الإلكتروني:</label>
                    <input type="email" id="managerEmail" name="managerEmail" required>

                    <label for="managerPhone">رقم الهاتف:</label>
                    <input type="tel" id="managerPhone" name="managerPhone" required>
                    <br><br>
                    <label for="managerType">نوع الموظف:</label>
                    <select id="managerType" name="managerType" required>
                        <option value="manager">مدير المنتجات</option>
                        <option value="driver">السائق</option>
                    </select><br><br>
                    <button type="button" onclick="addUser()">إضافة</button>
                </form>
            </div>
            <div id="section3" class="section">
                <h1>قائمة المستخدمين</h1>
                <button id="fetchUsersButton">اعرض المستخدمين</button>
                <table>
                    <thead>
                        <tr>
                            <th>الرقم التسلسلي</th>
                            <th>الاسم</th>
                            <th>البريد الإلكتروني</th>
                            <th>الهاتف</th>
                        </tr>
                    </thead>
                    <tbody id="usersTableBody">
                    </tbody>
                </table>
            </div>
            <div id="section4" class="section">
                <h1>قائمة الطلبات</h1>
                <button id="getAllOrdersButton">احصل على كل الطلبات</button>
                <table>
                    <thead>
                        <tr>
                            <th>رقم الطلب</th>
                            <th>تاريخ الطلبية</th>
                            <th>القيمة الإجمالية</th>
                            <th>حالة الطلبية</th>
                        </tr>
                    </thead>
                    <tbody id="requestsTableBody">
                    </tbody>
                </table>
            </div>
            <div id="section5" class="section">
                <h1>قائمة المنتجات</h1>
                <button onclick="fetchProducts()">جلب بيانات المنتجات</button>
                <table>
                    <thead>
                        <tr>
                            <th>الرقم التسلسلي</th>
                            <th>اسم المنتج</th>
                            <th>الوصف</th>
                            <th>السعر</th>
                            <th>الكمية المتاحة</th>
                        </tr>
                    </thead>
                    <tbody id="productsTableBody">
                    </tbody>
                </table>
            </div>
            <div id="section6" class="section">
                <h1>إدارة الشكاوي والاستفسارات</h1>
                <table>
                    <thead>
                        <tr>
                            <th>اسم العميل</th>
                            <th>نوع الشكوى أو الاستفسار</th>
                            <th>تفاصيل الشكوى أو الاستفسار</th>
                            <th>حالة الشكوى</th>
                        </tr>
                    </thead>
                    <tbody id="complaintsTableBody">
                    </tbody>
                </table>
            </div>
            <div id="section7" class="section">
                <h1>تحليل البيانات</h1>
                <button onclick="analyzeSalesData()">تحليل المبيعات</button>
                <br> <br>
                <div id="salesAnalysisResults"></div>
            </div>
            <div id="section8" class="section">
                <h1>معلومات المتجر</h1>
                <form>
                    <label for="storePhone">رقم هاتف المتجر:</label>
                    <input type="text" id="storePhone" name="storePhone"><br>

                    <label for="storeEmail">البريد الإلكتروني للمتجر:</label>
                    <input type="email" id="storeEmail" name="storeEmail"><br>

                    <label for="storeSocial">حساب السوشال ميديا للمتجر:</label>
                    <input type="text" id="storeSocial" name="storeSocial"><br><br>

                    <button type="button" onclick="save()">حفظ التغييرات</button>
                </form>
            </div>
        </div>
    </main>
    <footer>
        <p dir="ltr">&copy; 2024 - جميع الحقوق محفوظة</p>
        |
        <a href="front_privacy_policy">سياسة الخصوصية</a>
      
        <a href="front_about">من نحن</a>
        |
        <div class="social-links">
            <strong>تواصل معنا:</strong>
            <a href="@(Url.Content("https://youtube.com/@-StationeryStore?si=XlmT8B-DREJrxxNw"))">
                <img src="~/Images/Youtube.png" alt="Youtube Icon">
            </a>

            <a href="https://www.facebook.com/profile.php?id=61558642717289&mibextid=ZbWKwL">
                <img src="~/Images/facebook-icon.png" alt="Facebook Icon">
            </a>

            <a href="https://web.whatsapp.com/">
                <img src="~/Images/phone-call.png" alt="Phone Icon">
            </a>

        </div>
    </footer>
    <script>
        window.onload = function () {
            fillComplaintsTable();
            showSection('section1');
        };
        //getAllOrders
            document.getElementById('getAllOrdersButton').addEventListener('click', function () {
                fetch("/api/Order/getAllOrders")
                    .then(response => response.json())
                    .then(data => {
                        var tableBody = document.getElementById('requestsTableBody');
                        tableBody.innerHTML = ''; // لحذف أي بيانات قديمة قد تكون موجودة في الجدول

                        data.forEach(order => {
                            var row = "<tr>" +
                            "<td>" + order.id + "</td>" +
                                "<td>" + order.orderDate + "</td>" +
                                "<td>" + order.totalAmount + "</td>" +
                                "<td>" + order.orderStatus + "</td>" +
                                "</tr>";
                            tableBody.innerHTML += row;
                        });
                    })
                    .catch(error => {
                        console.error("حدث خطأ أثناء جلب البيانات:", error);
                    });
            });
           //edit Info
        fetch('/api/ContactInformation/getStoreInfos')
            .then(response => response.json())
            .then(data => {
                // تعبئة حقول النموذج بالقيم المسترجعة
                document.getElementById('storePhone').value = data[0].value;
                document.getElementById('storeEmail').value = data[1].value;
                document.getElementById('storeSocial').value = data[2].value;
            })
            .catch(error => console.error('حدث خطأ أثناء جلب بيانات معلومات الاتصال:', error));
        initialPhoneValue = document.getElementById('storePhone').value;
        initialEmailValue = document.getElementById('storeEmail').value;
        initialSocialValue = document.getElementById('storeSocial').value;
        function save() {
            // جمع البيانات المعدلة من الحقول
            var currentPhoneValue = document.getElementById('storePhone').value;
            var currentEmailValue = document.getElementById('storeEmail').value;
            var currentSocialValue = document.getElementById('storeSocial').value;

            // التأكد من أن هناك تغيير في القيم
            if (currentPhoneValue !== initialPhoneValue || currentEmailValue !== initialEmailValue || currentSocialValue !== initialSocialValue) {
                // إرسال البيانات المعدلة إلى الخادم
                fetch('/api/ContactInformation/setContactInformation', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        // تمرير القيم الحالية للحقول كبيانات المعدلة
                        storePhone: currentPhoneValue,
                        storeEmail: currentEmailValue,
                        storeSocial: currentSocialValue
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        // عرض رسالة بنجاح التحديث
                        alert('تم تحديث البيانات بنجاح!');
                    })
                    .catch(error => console.error('حدث خطأ أثناء حفظ التغييرات:', error));
            } else {
                // القيم متطابقة، لا حاجة لحفظ التغييرات
                alert('لا توجد تغييرات لحفظها.');
            }
        }
        //add item manager and driver
        function addUser() {
            var userTypeElement = document.getElementById("managerType");
            var userTypeValue = userTypeElement.value;
            var userType;

            if (userTypeValue === "manager") {
                userType = "Item Manager";
            } else if (userTypeValue === "driver") {
                userType = "Driver";
            }

            var formData = {
                Username: document.getElementById("managerName").value,
                Password: document.getElementById("managerPassword").value,
                Email: document.getElementById("managerEmail").value,
                Phone: document.getElementById("managerPhone").value,
                UserType: userType // Assign converted user type
            };

            // Check if the selected user type is valid
            if (userType === "Item Manager" || userType === "Driver") {
                fetch('/api/User/add_user', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log(data); // Handle success response from backend
                        // Show success message
                        alert("تمت الإضافة بنجاح!");
                        // Clear input fields
                        document.getElementById("managerName").value = "";
                        document.getElementById("managerPassword").value = "";
                        document.getElementById("managerConfirmPassword").value = "";
                        document.getElementById("managerEmail").value = "";
                        document.getElementById("managerPhone").value = "";
                        document.getElementById("managerType").value = ""; // Reset dropdown selection
                    })
                    .catch(error => {
                        console.error('Error:', error); // Handle error
                        // Show error message
                        alert("حدث خطأ أثناء الإضافة !");
                    });
            } else {
                // If the selected user type is not valid
                alert("يرجى اختيار نوع الموظف الصحيح (مدير أو سائق)");
            }
        }
        // users info
        document.getElementById('fetchUsersButton').addEventListener('click', function () {
            // إجراء طلب لاسترجاع بيانات المستخدمين
            fetch('/api/User') // قم بتغيير المسار إلى المسار الصحيح لنهاية الخدمة التي تسترجع بيانات المستخدمين
                .then(response => response.json())
                .then(data => {
                    // عرض بيانات المستخدمين في الجدول
                    const usersTableBody = document.getElementById('usersTableBody');

                    // تفريغ الجدول قبل إضافة البيانات الجديدة
                    usersTableBody.innerHTML = '';

                    data.forEach(user => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                                                <td>${user.id}</td>
                                                <td>${user.username}</td>
                                                <td>${user.email}</td>
                                                <td>${user.phone}</td>
                                            `;
                        usersTableBody.appendChild(row);
                    });
                })
                .catch(error => console.error('Error fetching users:', error));
        });
        //products info
        function fetchProducts() {
            // قم بجلب بيانات المنتجات من خلال طلب HTTP
            fetch('/api/ProductAttributeQuantity')
                .then(response => response.json())
                .then(products => {
                    // قم بتحديث جدول المنتجات مع البيانات الجديدة
                    updateProductTable(products);
                })
                .catch(error => console.error('حدث خطأ أثناء جلب بيانات المنتجات:', error));
        }
        function updateProductTable(products) {
            const tableBody = document.getElementById('productsTableBody');
            // قم بمسح البيانات القديمة من جدول المنتجات
            tableBody.innerHTML = '';

            // قم بإضافة البيانات الجديدة إلى جدول المنتجات
            products.forEach(product => {
                const row = `
                                    <tr>
                                               <td>${product.productId}</td>
                                            <td>${product.productName}</td>
                                            <td>${product.productDescription}</td>
                                                <td>${product.price}</td>
                                        <td>${product.quantity}</td>
                                    </tr>
                                `;
                tableBody.innerHTML += row;
            });
        }

        // يمكنك استخدام JavaScript لتحديث حالة الطلبية وتنشيط الحدث المناسب
        const events = document.querySelectorAll('.event');

        function showSection(sectionId) {
            // إخفاء جميع الأقسام
            var sections = document.querySelectorAll('.section');
            sections.forEach(function (section) {
                section.classList.remove('active-section');
            });

            // إظهار القسم المحدد
            var selectedSection = document.getElementById(sectionId);
            selectedSection.classList.add('active-section');

            // إظهار زر الحفظ بشكل تلقائي في القسم المحدد
            var saveIcon = selectedSection.querySelector('.save-icon');
            if (saveIcon) {
                saveIcon.style.display = 'inline';
            }
        }

        function submitForm(event) {
            event.preventDefault();

            // يمكنك إضافة الكود اللازم هنا لمعالجة النموذج والرد على العميل
            // يمكن استخدام JavaScript أو تقديم طلب AJAX للتفاعل مع الخادم

            // في هذا المثال، سنقوم بعرض رسالة تأكيد ببساطة
            alert('تم استلام استفسارك، سنقوم بالرد في أقرب وقت ممكن. شكراً لتواصلك معنا!');
        }
       
        const complaints = [
            { customerName: "اسم العميل", complaintType: "نوع الشكوى", complaintDetails: "تفاصيل الشكوى" },
            { customerName: "اسم العميل الآخر", complaintType: "نوع آخر", complaintDetails: "تفاصيل الشكوى الأخرى" },
            // قم بإضافة المزيد من الشكاوى حسب الحاجة
        ];
        function fillComplaintsTable() {
            var complaintsTableBody = document.getElementById("complaintsTableBody");
            complaintsTableBody.innerHTML = "";

            // Assuming complaints is defined somewhere
            for (var i = 0; i < complaints.length; i++) {
                var row = complaintsTableBody.insertRow();
                var cell1 = row.insertCell(0);
                var cell2 = row.insertCell(1);
                var cell3 = row.insertCell(2);
                var cell4 = row.insertCell(3);

                cell1.innerHTML = complaints[i].customerName;
                cell2.innerHTML = complaints[i].complaintType;
                cell3.innerHTML = complaints[i].complaintDetails;
                cell4.innerHTML = "<select id='statusSelect" + i + "'><option value='pending'>قيد المراجعة</option><option value='resolved'>تم التعامل معها</option></select>";
            }
        }

        function updateComplaintStatus(index) {
            var statusSelect = document.getElementById("statusSelect" + index);
            var selectedStatus = statusSelect.value;

            complaints[index].status = selectedStatus;
            fillComplaintsTable();
        }


        const salesData = [
            { month: "يناير", amount: 50000 },
            { month: "فبراير", amount: 75000 },
            { month: "مارس", amount: 100000 },
            // ... يمكنك إضافة المزيد من بيانات المبيعات
        ];

        function analyzeSalesData() {
            var totalSales = salesData.reduce(function (sum, sale) {
                return sum + sale.amount;
            }, 0);

            var salesRatioData = salesData.map(function (sale) {
                var ratio = (sale.amount / totalSales) * 100;
                return { month: sale.month, ratio: ratio.toFixed(2) + "%" };
            });

            var analysisReport = "نتائج التحليل:\n\n";
            salesRatioData.forEach(function (sale) {
                analysisReport += sale.month + ": " + sale.ratio + "\n";
            });

            document.getElementById("salesAnalysisResults").innerText = analysisReport;
        }
    </script>

</body>

</html>
