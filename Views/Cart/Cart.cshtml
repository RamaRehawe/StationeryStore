@{
    ViewData["Title"] = "عربة التسوق";
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>عربة التسوق</title>
    <link rel="stylesheet" href="~/CSS/Styles.css">
    <link rel="icon" href="~/Images/ICO.png" type="image/png">
    <script src="~/Javascript/Functions.js"></script>
</head>

<body>
    <a href="front_home">
        <img class="logo" src="~/Images/logo.png" alt="logo">
    </a>
    <div class="logout-icon">
        <a onclick="logout()" id="logoutLink" style="display:none;">
            <img src="~/Images/log-out.png" alt="Logout" >
            <span id="logout-text"> تسجيل الخروج</span>
        </a>
    </div>
    <main>
        <section id="cart-container">
            <form class="cart-form">
                <h2>سلة التسوق</h2>
                <div class="empty-cart-message" id="empty-cart-message-cart">
                    <p>السلة لا تحوي منتجات</p>
                </div>
                <div class="login-alert" id="login-alert" style="display: none;">
                    <p>يجب عليك <a href="front_login">تسجيل الدخول</a> أولاً.</p>
                </div>
                <!-- Cart items will be dynamically added here -->
                <a href="#" class="remove-link" onclick="deleteCartItem(itemId)" style="display: none;">حذف</a>
                <div class="cart-total" id="cart-total" style="display: none;">
                    <p>إجمالي الفاتورة:  ل.س 0</p>
                </div>
                <br>
                <button class="checkout-btn" id="checkout-btn" style="display: none;">اتمام الشراء</button>
            </form>
        </section>

    </main>

    <footer>
        <p dir="ltr">&copy; 2024 - جميع الحقوق محفوظة</p>
        |
        <a href="front_privacy_policy">سياسة الخصوصية</a>
       
        <a href="front_about">من نحن</a>
        |
        <div class="social-links">
            <strong>تواصل معنا:</strong>
            <a href="@(Url.Content("https://youtube.com/@-StationeryStore?si=XlmT8B-DREJrxxNw"))">
                <img src="~/Images/Youtube.png" alt="Youtube Icon">
            </a>

            <a href="https://www.facebook.com/profile.php?id=61558642717289&mibextid=ZbWKwL">
                <img src="~/Images/facebook-icon.png" alt="Facebook Icon">
            </a>

            <a href="https://web.whatsapp.com/">
                <img src="~/Images/phone-call.png" alt="Phone Icon">
            </a>

        </div>
    </footer>

    <script>
        const authToken = localStorage.getItem('authToken');
        const userId = localStorage.getItem('userId'); // Assuming you store the user ID in localStorage
        document.addEventListener('DOMContentLoaded', function () {
            checkLoginStatus();
        });

        function checkLoginStatus() {
            const authToken = localStorage.getItem('authToken');
            const isLoggedIn = authToken !== null;

            const logoutIcon = document.getElementById('logoutLink');
            if (isLoggedIn) {
                logoutIcon.style.display = 'block'; // Show the logout icon if logged in
            } else {
                logoutIcon.style.display = 'none'; // Hide the logout icon if not logged in
                clearCart();
                displayEmptyCartMessage();
            }
        }

        window.addEventListener('DOMContentLoaded', function () {
            fetchCartItems();
        });

        function fetchCartItems() {
            fetch('/api/Cart/myCart')
                .then(response => response.json())
                .then(data => {
                    const cartContainer = document.getElementById('cart-container');
                    const cartForm = cartContainer.querySelector('.cart-form');
                    const emptyCartMessage = cartContainer.querySelector('#empty-cart-message-cart');
                    const loginAlert = cartContainer.querySelector('#login-alert');
                    const removeLink = cartContainer.querySelector('.remove-link');
                    const cartTotal = cartContainer.querySelector('#cart-total');
                    const checkoutBtn = cartContainer.querySelector('#checkout-btn');

                    if (data.cartItems.length > 0) {
                        cartForm.innerHTML = '';

                        data.cartItems.forEach(item => {
                            const cartItemHtml = `
                                <div class="cart-item">
                                    <!-- Add cart item details here -->
                                    <a href="#" class="remove-link" onclick="deleteCartItem(${item.itemId})">حذف</a>
                                </div>
                            `;
                            cartForm.insertAdjacentHTML('beforeend', cartItemHtml);
                        });

                        cartTotal.querySelector('p').textContent = `إجمالي الفاتورة: ل.س ${data.totalPrice}`;
                        cartTotal.style.display = 'block';
                        checkoutBtn.style.display = 'block';
                        emptyCartMessage.style.display = 'none';
                        loginAlert.style.display = 'none';
                        removeLink.style.display = 'block'; // Display the remove link for each item
                    } else {
                        cartTotal.style.display = 'none';
                        checkoutBtn.style.display = 'none';
                        emptyCartMessage.style.display = 'block';
                        loginAlert.style.display = 'block';
                        removeLink.style.display = 'none'; // Hide the remove link when the cart is empty
                    }
                })
                .catch(error => console.error('Error fetching cart items:', error));
        }

       
        // Function to delete a cart item
        function deleteCartItem(itemId) {
            // Send DELETE request to backend API
            fetch(`/api/Cart/deleteItem/${itemId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + authToken
                }
            })
                .then(response => {
                    if (!response.ok) {
                        return response.text().then(errorMsg => Promise.reject(new Error(errorMsg)));
                    }
                    return response.text();
                })
                .then(result => {
                    // Item deleted successfully, fetch updated cart items
                    fetchCartItems();
                    alert(result);
                })
                .catch(error => {
                    alert(error.message);
                    console.error('Error deleting item from cart:', error);
                });
        }

        // Call fetchCartItems when the page loads to initially populate the cart
        window.addEventListener('load', fetchCartItems);
        // Add an event listener to the "Place Order" button
        document.getElementById('checkout-btn').addEventListener('click', placeOrder);

        // Function to handle placing an order
        function placeOrder() {
            fetch('/api/Order/placeOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + authToken
                },
                body: JSON.stringify({
                    // Pass any required data for the order here, such as addressId
                    addressId: '123' // Replace with the actual addressId
                })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to place order');
                    }
                    return response.json();
                })
                .then(data => {
                    const orderId = data.orderId; // Assuming the order ID is returned in the response

                    // Redirect to the checkout page with the order ID in the URL
                    window.location.href = `front_checkout?id=${orderId}`; // Replace 'front_checkout' with the actual URL of the checkout page
                    // Order placed successfully, redirect to the checkout page
                })
                .catch(error => {
                    console.error('Error placing order:', error);
                    alert('Failed to place order. Please try again.');
                });
        }



        function displayEmptyCartMessage() {
            // عرض رسالة السلة فارغة ورابط تسجيل الدخول
            var emptyCartMessage = document.getElementById('empty-cart-message-cart');
            if (emptyCartMessage) {
                emptyCartMessage.style.display = 'block';
            }

            var loginAlert = document.getElementById('login-alert');
            if (loginAlert) {
                loginAlert.style.display = 'block';
            }
        }
      

        function updateItemTotal(select) {
            var cartItem = select.closest('.cart-item');

            if (!cartItem) {
                console.error("Cart item not found.");
                return false;
            }

            var priceElement = cartItem.querySelector('.item-price');

            if (!priceElement) {
                console.error("Price element not found in the current cart item:", cartItem);
                return false;
            }

            var price = parseFloat(priceElement.textContent.replace('السعر: ل.س ', ''));
            var quantity = parseInt(select.value);
            var itemTotal = price * quantity;
            cartItem.querySelector('.item-total').textContent = 'المجموع: ل.س ' + itemTotal.toFixed(2);
            updateTotal();

            // Return false to prevent form submission
            return false;
        }

        function updateTotal() {
            var cartTotal = 0;
            var cartItems = document.querySelectorAll('.cart-item');

            cartItems.forEach(function (cartItem) {
                var priceElement = cartItem.querySelector('.item-price');
                var quantity = parseInt(cartItem.querySelector('select').value);

                if (priceElement) {
                    var price = parseFloat(priceElement.textContent.replace('السعر: $', ''));
                    cartTotal += price * quantity;
                }
            });

            var cartTotalElement = document.getElementById('cart-total');
            var checkoutBtn = document.getElementById('checkout-btn');
            var emptyCartMessage = document.getElementById('empty-cart-message');

            if (cartTotal > 0) {
                cartTotalElement.textContent = 'إجمالي الفاتورة: ل.س ' + cartTotal.toFixed(2);
                cartTotalElement.style.display = 'block';
                checkoutBtn.style.display = 'block'; // Show the checkout button
                emptyCartMessage.style.display = 'none';
            } else {
                cartTotalElement.style.display = 'none';
                checkoutBtn.style.display = 'none'; // Hide the checkout button
                emptyCartMessage.style.display = 'block';
            }

            // Update the cart item count variable
            cartItemCount = getCartItemCount();

            // Display the updated cart item count
            const cartItemCountElement = document.getElementById('cart-item-count');
            if (cartItemCountElement) {
                cartItemCountElement.textContent = cartItemCount;
            }
        }
        function clearCart() {
            // قم بتفريغ السلة هنا، يمكنك استخدام الطريقة التي تفضلها
            // على سبيل المثال، يمكنك حذف جميع العناصر في السلة أو حفظها لاستخدامها في وقت لاحق
            var cartItems = document.querySelectorAll('.cart-item');
            cartItems.forEach(function (cartItem) {
                cartItem.remove();
            });
            updateTotal(); // قم بتحديث إجمالي السلة
        }
       
        function logout() {
            // حذف الـ token من الجلسة
            localStorage.removeItem('authToken');

            // توجيه المستخدم إلى الصفحة الرئيسية أو أي صفحة أخرى
            window.location.href = "front_home";
        }
       

    </script>

</body>

</html>
