@{
    ViewData["Title"] = "الملف الشخصي";
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>الملف الشخصي</title>
    <link rel="stylesheet" href="~/CSS/Styles.css">
    <link rel="icon" href="~/Images/ICO.png" type="image/png">
    <script src="~/Javascript/Functions.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>

<body>
    <a href="front_home">
        <img class="logo" src="~/Images/logo.png" alt="logo">
    </a>
    <div class="logout-icon">
        <a onclick="logout()" id="logoutLink">
            <img src="~/Images/log-out.png" alt="Logout">
            <span id="logout-text"> تسجيل الخروج</span>
        </a>
    </div>
    <main>
        <div id="sidebar">
            <a href="#section2" onclick="showSection('section2')">المعلومات الشخصية</a>
            <a href="#section3" onclick="showSection('section3')">إضافة عناوين</a>
            <a href="#section4" onclick="showSection('section4')">تتبع الطلبية</a>
            <a href="#section5" onclick="showSection('section5')">الطلبيات السابقة</a>
            <a href="#section6" onclick="showSection('section6')">عرض العناوين الخاصة بي</a>


        </div>

        <div id="content">
            <div id="section1" class="section active-section">
                <h2>أهلاً بك، ليس هناك طلبات حالية </h2>
                <button onclick="redirectToHomePage()">عد للصفحة الرئيسية للتسوق</button>
                <br>
                <p>نحن نفتخر بتوفير تجربة تسوق سلسة ومرضية، ونشجعكم دائمًا على التواصل مع المدير لأي استفسارات أو اقتراحات. نتمنى لكم تجربة تسوق ممتعة!</p>
                <img class="second-img" src="~/Images/online-shopping.jpg" alt="صورة تعبيرية عن عمل المتجر الكتروني للقرطاسية">

            </div>
            <div id="section2" class="section">
                <form>
                    <div class="section-header">
                        <h2>المعلومات الشخصية</h2>
                        <div class="section-actions">
                            <span class="save-icon" onclick="saveChanges('section2')" style="display: none;">💾</span>
                        </div>
                    </div>
                    <p>التفاصيل ...</p>
                    <label for="username">اسم المستخدم:</label>
                    <input type="text" id="username" name="username"  required disabled>

                    <label for="email">البريد الإلكتروني:</label>
                    <input type="email" id="email" name="email" required disabled>

                    <label for="phone">رقم الهاتف:</label>
                    <input type="tel" id="phone" name="phone" required disabled dir="rtl">

                    <label for="gender">الجنس:</label>
                        <div class="gender-options">
                        <label>
                            <input type="radio" id="male" name="gender" value="male" required >
                            <span class="radio-text">ذكر</span>
                        </label>
                        <label>
                            <input type="radio" id="female" name="gender" value="female" required>
                            <span class="radio-text">أنثى</span>
                        </label>
                    </div>
                    <label for="birthdate">تاريخ الميلاد:</label>
                    <input type="date" id="birthdate" name="birthdate">

                    <br><br>
                    <button type="button" onclick="save()">حفظ</button>
                </form>
            </div>


            <div id="section3" class="section" >

                <form>
                    <div class="section-header">
                        <h2>إضافة عناوين</h2>
                        <div class="section-actions">
                            <span class="save-icon" onclick="saveChanges('section3')" style="display: none;">💾</span>
                        </div>
                    </div>
                    <label for="work-name"> تسمية العنوان:</label>
                    <input type="text" id="work-name" name="work-name" required>

                    <label for="work-city">المدينة:</label>
                    <input type="text" id="work-city" name="work-city" required>

                    <label for="work-street">الشارع:</label>
                    <input type="text" id="work-street" name="work-street" required>

                    <label for="person-name"> اسم المستلم:</label>
                    <input type="text" id="person-name" name="person-name" required>

                    <label for="work-phone">رقم الهاتف:</label>
                    <input type="tel" id="work-phone" name="work-phone" required>

                    <button type="button" onclick="addAddress()">إضافة</button>

                </form>

            </div>
            <div id="section4" class="section">
                <h1>تتبع الطلبية</h1>

                <h2>طلبية رقم 1</h2>
        
                <div id="timeline">
                    <div class="event" data-status="loading">
                        <i class="fas fa-cogs"></i>
                        <span>تحميل البضائع</span>

                    </div>
                    <li class="line"></li>
                    <div class="event" data-status="shipped">
                        <i class="fas fa-truck"></i>
                        <span>شحن البضائع</span>
                    </div><li class="line"></li>
                    <div class="event" data-status="delivered">
                        <i class="fas fa-box"></i>
                        <span>توصيل البضائع</span>
                    </div>
                </div>
            </div>
            <div id="section5" class="section">
                <h2>جميع الطلبيات</h2>

                <table>
                    <thead>
                        <tr>
                            <th>رقم الطلب</th>
                            <th>تاريخ الطلب</th>
                            <th>حالة الطلب</th>
                            <th>القيمة الإجمالية</th>
                        </tr>
                    </thead>
                    <tbody id="lastordertable">
                    </tbody>
                </table>

            </div>
            <div id="section6" class="section">
                <h2>العناوين الخاصة بي</h2>
                <table>
                    <thead>
                        <tr>
                            <th>العنوان</th>
                            <th>المدينة</th>
                            <th>الشارع</th>
                            <th>اسم المستلم</th>
                            <th>رقم الهاتف</th>
                        </tr>
                    </thead>
                    <tbody id="myaddresses">
                    </tbody>
                </table>

            </div>
        </div>
    </main>
    <footer>
        <p dir="ltr">&copy; 2024 - جميع الحقوق محفوظة</p>
        |
        <a href="front_privacy_policy">سياسة الخصوصية</a>
        <a id="customerServiceLink" href="front_customer_service">خدمة العملاء</a>
        <a href="front_about">من نحن</a>
        |
        <div class="social-links">
            <strong>تواصل معنا:</strong>
            <a href="@(Url.Content("https://youtube.com/@-StationeryStore?si=XlmT8B-DREJrxxNw"))">
                <img src="~/Images/Youtube.png" alt="Youtube Icon">
            </a>

            <a href="https://www.facebook.com/profile.php?id=61558642717289&mibextid=ZbWKwL">
                <img src="~/Images/facebook-icon.png" alt="Facebook Icon">
            </a>

            <a href="https://web.whatsapp.com/">
                <img src="~/Images/phone-call.png" alt="Phone Icon">
            </a>

        </div>
    </footer>
    <script>
        const alertMessage = localStorage.getItem('alertMessage');
        if (alertMessage) {
            alert(alertMessage);
            // Optionally, clear the alert message from local storage after displaying it
            localStorage.removeItem('alertMessage');
        }
        const authToken = localStorage.getItem('authToken');
        console.log(authToken);

        fetch('/api/User', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + authToken
            }
        })
            .then(response => response.json())
            .then(userDataArray => {
                console.log('User data:', userDataArray);

                // استخراج معرف المستخدم من sessionStorage
                const userData = JSON.parse(sessionStorage.getItem('userData'));
                if (!userData || !userData.userId) {
                    console.error('User data not found in sessionStorage or missing userId.');
                    return;
                }

                // استخراج معرف المستخدم
                const loggedInUserId = userData.userId;
                console.log('Logged in user ID:', loggedInUserId);

                // البحث عن بيانات المستخدم المرتبطة بالمعرف المسجل
                const loggedInUser = userDataArray.find(user => user.id === loggedInUserId);
                if (loggedInUser) {
                    // عرض بيانات المستخدم
                    document.getElementById('username').value = loggedInUser.username;
                    document.getElementById('email').value = loggedInUser.email;
                    document.getElementById('phone').value = loggedInUser.phone;
                } else {
                    console.error('Logged in user data not found.');
                }
            })
            .catch(error => console.error('Error fetching user data:', error));

        // Function to translate order status to Arabic
        function translateStatus(status) {
            switch (status) {
                case 'loading':
                    return 'جارٍ التحميل';
                case 'shipped':
                    return 'تم الشحن';
                case 'delivered':
                    return 'تم التوصيل';
                default:
                    return 'غير معروف';
            }
        }


        // Fetch data from API endpoint
        fetch('/api/Order/orders', {
            headers: {
                'Authorization': 'Bearer ' + authToken
            }
        })
            .then(response => response.json())
            .then(data => {
                // Get reference to the table body
                const tableBody = document.getElementById('lastordertable');

                // Loop through each order and create table rows
                data.forEach(order => {
                    // Create a new table row
                    const row = document.createElement('tr');

                    // Populate the row with order data
                    row.innerHTML = `
                               <td>${order.id}</td>
                        <td>${order.orderDate}</td>
                            <td>${translateStatus(order.orderStatus)}</td>
                                <td>${order.totalAmount}</td>

                    `;

                    // Append the row to the table body
                    tableBody.appendChild(row);

                });
            })
            .catch(error => console.error('Error fetching orders:', error));

        function addAddress() {
            const authToken = localStorage.getItem('authToken');
            if (!authToken) {
                console.error('Authentication token not found in localStorage.');
                return;
            }

            console.log('Authentication token:', authToken);

            const userId = sessionStorage.getItem('userId') || localStorage.getItem('userId');
            if (!userId) {
                console.error('User ID not found in sessionStorage or localStorage.');
                return;
            }

            console.log('User ID:', userId);

            const workNameInput = document.getElementById('work-name');
            const workCityInput = document.getElementById('work-city');
            const workStreetInput = document.getElementById('work-street');
            const personNameInput = document.getElementById('person-name');
            const workPhoneInput = document.getElementById('work-phone');

            const workName = workNameInput.value.trim();
            const workCity = workCityInput.value.trim();
            const workStreet = workStreetInput.value.trim();
            const personName = personNameInput.value.trim();
            const workPhone = workPhoneInput.value.trim();

            if (!workName || !workCity || !workStreet || !personName || !workPhone) {
                alert('رجاء قم بتعبئة جميع الحقول.');
                return;
            }

            const addressData = {
                title: workName,
                city: workCity,
                street: workStreet,
                name: personName,
                phone: workPhone,
                userId: parseInt(userId) // Ensure userId is parsed as an integer
            };

            fetch('/api/Address', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${authToken}`
                },
                body: JSON.stringify(addressData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    console.log(response); // Logging the response for debugging
                    alert('تمت إضافة العنوان بنجاح');
                    // Optionally clear form inputs or perform any other actions
                    workNameInput.value = '';
                    workCityInput.value = '';
                    workStreetInput.value = '';
                    personNameInput.value = '';
                    workPhoneInput.value = '';
                })

                .catch(error => {
                    console.error('There was an error!', error);
                    alert('حدث خطأ أثناء عملية الإضافة');
                });
        }
        function fetchMyAddresses() {
            const authToken = localStorage.getItem('authToken');
            if (!authToken) {
                console.error('Authentication token not found in localStorage.');
                return;
            }

            fetch('https://localhost:7214/api/Address', {
                method: 'GET',
                headers: {
                    'Authorization': `Bearer ${authToken}`
                }
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(addresses => {
                    // Clear existing table rows
                    const tableBody = document.getElementById('myaddresses');
                    tableBody.innerHTML = '';

                    // Populate table with fetched addresses
                    addresses.forEach(address => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${address.title}</td>
                            <td>${address.city}</td>
                            <td>${address.street}</td>
                            <td>${address.name}</td>
                            <td>${address.phone}</td>
                        `;
                        tableBody.appendChild(row);
                    });
                })
                .catch(error => {
                    console.error('There was an error!', error);
                    alert('An error occurred while fetching addresses');
                });
        }

        // Call fetchMyAddresses function when the page loads or when needed
        fetchMyAddresses();
        // Define the order ID you want to track
        const orderId = 1; // Replace order.id with the actual order ID you want to track

        // Fetch order status
        fetch(`/api/Order/status?orderId=${orderId}`, {
            headers: {
                'Authorization': 'Bearer ' + authToken
            }
        })
            .then(response => response.json())
            .then(data => {
                const status = data.status;
                const timeline = document.getElementById('timeline');

                // Update timeline based on order status
                switch (status) {
                    case 'loading':
                        // Set loading status
                        timeline.innerHTML += `
                        <div class="event" data-status="loading">
                            <i class="fas fa-cogs"></i>
                                    <span style="background-color:darkgoldenrod">تم تحميل البضائع</span>
                        </div>
                    `;
                        break;
                    case 'shipped':
                        // Set shipped status
                        timeline.innerHTML += `
                        <li class="line"></li>
                        <div class="event" data-status="shipped">
                            <i class="fas fa-truck"></i>
                                    <span style="background-color:darkgoldenrod">تم الشحن</span>
                        </div>
                    `;
                        break;
                    case 'delivered':
                        // Set delivered status
                        timeline.innerHTML += `
                        <li class="line"></li>
                        <div class="event" data-status="delivered" >
                                    <i class="fas fa-box" ></i>
                                            <span style="background-color:darkgoldenrod">تم التوصيل</span>
                        </div>
                    `;
                        break;
                    default:
                        // Handle other statuses or errors
                        console.error('Unknown status:', status);
                        break;
                }
            })
            .catch(error => console.error('Error fetching order status:', error));


        function logout() {
            // حذف الـ token من الجلسة
            localStorage.removeItem('authToken');

            // توجيه المستخدم إلى الصفحة الرئيسية أو أي صفحة أخرى
            window.location.href = "front_home";
        }





    </script>
</body>

</html>
