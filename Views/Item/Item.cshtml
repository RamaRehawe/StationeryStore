@{
    ViewData["Title"] = "تفاصيل المنتج";
}
<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>تفاصيل المنتج</title>
    <link rel="stylesheet" href="~/CSS/Styles.css">
    <link rel="stylesheet" href="~/CSS/Styles1.css">
    <link rel="icon" href="~/Images/ICO.png" type="image/png">
    <script src="~/Javascript/Functions.js"></script>
</head>
<body>
    <a href="front_home">
        <img class="logo" src="~/Images/logo.png" alt="logo">
    </a>
    <main>

        <div class="product-details" id="product-table">
            <h2></h2>
            <p></p>
            <div class="product-images" id="thumbnail-container">
            </div>
            <img  alt="Main Product Image" class="main-product-image" id="main-product-image">

            <div class="product-details">
                <table>
                    <tr>
                        <th>الخاصية</th>
                        <th>القيمة</th>
                    </tr>
                    <tr>
                        <td>
                            <select id="attribute-name" name="Name1">
                                <option value="">اختر الخاصية</option>
                               
                            </select>
                        </td>
                        <td>
                            <select id="attribute-name" name="Value1">
                                <option value="">اختر القيمة</option>
                            </select>
                        </td>
                    </tr>    
                   
                </table>
                <button onclick="addRow()">أضف خاصية جديدة</button>

            </div>

            <p id="price" class="price"></p>

            <div class="delivery-info" id="deliveryInfo">
                <!-- سيتم تحديث معلومات التسليم هنا -->
            </div>
            <br>
            <a href="#" id="showShippingLink">عرض تفاصيل الشحن</a>
            <div class="modal" id="shippingModal">
                <div class="modal-content">
                    <span class="close" id="closeShippingModalBtn">&times;</span>
                    <div class="shipping-details" id="shippingDetails">
                        <!-- سيتم تحديث تفاصيل الشحن هنا -->
                    </div>
                </div>
            </div>

            <div class="quantity" id="quantityContainer">
                <p>متوفر في المخزن</p>
                <label class="quantity-label">الكمية :</label>
                <select class="quantity-select" id="quantitySelect" onchange="updateQuantityInput()">
                   
                </select>
            </div>

            <div class="actions">
                <button class="add-to-cart" onclick="addToCart()">إضافة إلى السلة</button>
                <button class="buy-now" onclick="redirectToCheckout()">شراء الآن</button>
            </div>
            <br>
            <div id="addMessage" style="display: none; color: green;">
                تمت الإضافة بنجاح!
            </div>

            <div class="rating-form" id="ratingForm" style="display: none;">
                <h3>تقييم المنتج</h3>
                <div class="rating-stars">
                    <span onclick="rateProduct(1)">&#9733;</span>
                    <span onclick="rateProduct(2)">&#9733;</span>
                    <span onclick="rateProduct(3)">&#9733;</span>
                    <span onclick="rateProduct(4)">&#9733;</span>
                    <span onclick="rateProduct(5)">&#9733;</span>
                </div>
                <textarea id="user-comment" placeholder="أضف تعليقًا..."></textarea>
                <button onclick="submitRating()">تقييم</button>
            </div>

            <!-- عرض التقييمات -->
            <div class="product-ratings" id="ratingsDisplay">
                <h3>تقييمات المنتج</h3>
                <div class="user-rating">
                    <div class="rating-stars">
                        <span>&#9733;</span>
                        <span>&#9733;</span>
                        <span>&#9733;</span>
                        <span>&#9733;</span>
                        <span>&#9733;</span>
                    </div>
                    <p>المستخدم: تعليق رائع جدًا على المنتج يظهر هنا.</p>
                </div>
                <!-- يمكنك إضافة المزيد من التقييمات هنا -->
            </div>
        </div>
    </main>
    <footer>
        <p dir="ltr">&copy; 2024 - جميع الحقوق محفوظة</p>
        |
        <a href="front_privacy_policy">سياسة الخصوصية</a>
     
        <a href="front_about">من نحن</a>
        |
        <div class="social-links">
            <strong>تواصل معنا:</strong>
            <a href="@(Url.Content("https://youtube.com/@-StationeryStore?si=XlmT8B-DREJrxxNw"))">
                <img src="~/Images/Youtube.png" alt="Youtube Icon">
            </a>

            <a href="https://www.facebook.com/profile.php?id=61558642717289&mibextid=ZbWKwL">
                <img src="~/Images/facebook-icon.png" alt="Facebook Icon">
            </a>

            <a href="https://web.whatsapp.com/">
                <img src="~/Images/phone-call.png" alt="Phone Icon">
            </a>

        </div>
    </footer>

    <script>
        window.onload = function () {
            fetch(`https://localhost:7214/api/Product/productId?productId=${productId}`)
            .then(response => response.json())
                .then(data => {
                    var quantitySelect = document.getElementById("quantitySelect");

                    // قم بملء عنصر "select" بالخيارات المتاحة
                    data.ProductAttributeQuantities.forEach(function (item) {
                        var option = document.createElement("option");
                        option.text = item.Name1 + ": " + item.Value1 + ", " + item.Name2 + ": " + item.Value2;
                        option.value = item.Quantity;
                        quantitySelect.appendChild(option);
                    });
                })
                .catch(error => console.error('Error fetching data:', error));
        };

        // وظيفة تحديث الكمية عند تغيير الاختيار
        function updateQuantityInput() {
            var quantity = document.getElementById("quantitySelect").value;
            // يمكنك هنا استخدام كمية المنتج المحددة (quantity) لإضافتها إلى سلة التسوق أو للقيام بأي شيء آخر.
            alert("الكمية المحددة: " + quantity);
        }
        // استخراج query string من عنوان الصفحة الحالي
        const queryString = window.location.search;

        // إنشاء كائن URLSearchParams للعمل مع query string
        const urlParams = new URLSearchParams(queryString);

        // استخراج قيمة المعلمة id من query string
        const productId = urlParams.get('id');

        // الآن لديك قيمة productId التي تم تمريرها من الصفحة الأولى
        console.log(productId); // يجب عرض قيمة id هنا

        var addedRow = false; // متغير لتتبع ما إذا تمت إضافة الصف الإضافي
        const authToken = localStorage.getItem('authToken');
        const userId = localStorage.getItem('userId'); // Assuming you store the user ID in localStorage

        function addRow() {
            if (!addedRow) {
                var table = document.getElementById("product-table");
                var newRow = table.getElementsByTagName('tbody')[0].insertRow(); // الحصول على الصف الجديد من الجدول
                var cell1 = newRow.insertCell(0); // إضافة خلية للصف الجديد
                var cell2 = newRow.insertCell(1); // إضافة خلية للصف الجديد
                cell1.innerHTML = "<select><option value=''>اختر الخاصية</option></select>"; // إضافة قائمة لاختيار الخاصية
                cell2.innerHTML = "<select><option value=''>اختر القيمة</option></select>"; // إضافة قائمة لإدخال القيمة
                addedRow = true; // تعيين المتغير إلى القيمة true للدلالة على إضافة الصف الإضافي
            }
        }

        // استدعاء الـ API لجلب معلومات المنتج بناءً على الـ id المسترد
        fetch(`https://localhost:7214/api/Product/productId?productId=${productId}`)
            .then(response => response.json())
            .then(productData => {
                // استخدام بيانات المنتج لتحديث عناصر الصفحة HTML
                document.getElementById('product-table').innerHTML = `
                    <h2>${productData.name}</h2>
                    <p>${productData.description}</p>

                    <!-- إضافة بيانات المنتج الأخرى هنا -->
                    <table>
                        <tr>
                            <th>الخاصية</th>
                            <th>القيمة</th>
                        </tr>
                        <tr>
                            <td>${productData.productAttributeQuantities[0].name1}</td>
                            <td>${productData.productAttributeQuantities[0].value1}</td>
                        </tr>
                        <!-- يمكنك إضافة المزيد من الخصائص هنا -->
                    </table>

                    <p id="price" class="price">السعر: ${productData.productAttributeQuantities[0].price} ل.س</p>
                    <!-- يمكنك إضافة المزيد من المعلومات هنا، مثل معلومات التسليم والإضافة إلى السلة -->
                `;

                // // إضافة الصور المصغرة
                // var thumbnailContainer = document.getElementById("thumbnail-container");
                // productData.productAttributeQuantities.forEach(function (quantity) {
                //     var img = document.createElement("img");
                //     img.src = quantity.imageAttributes[0].url;
                //     img.alt = "Product Thumbnail";
                //     img.className = "thumbnail";
                //     img.addEventListener("click", function () {
                //         changeMainImage(quantity.imageAttributes[0].url);
                //     });
                //     thumbnailContainer.appendChild(img);
                // });
            })
            .catch(error => console.error('حدث خطأ في جلب معلومات المنتج:', error));


        // في دالة لإضافة المنتج إلى سلة التسوق
        function addToCart(productId) {
            // قم بفحص حالة تسجيل الدخول
            var isLoggedIn = checkLoginStatus();

            if (isLoggedIn) {
                // استدعاء الدالة المحسنة لإضافة المنتج إلى سلة التسوق
                addToCartWithDetails(productId, 123, 1); // Replace 123 and 1 with actual values
            } else {
                // لم يتم تسجيل الدخول، قم بتوجيه المستخدم إلى صفحة تسجيل الدخول
                alert('يجب عليك تسجيل الدخول لإضافة المنتج إلى سلة التسوق.');
                window.location.href = 'front_login'; // قم بتغيير 'login.html' إلى عنوان URL الصحيح لصفحة تسجيل الدخول
            }
        }

        // الدالة المحسنة لإضافة المنتج إلى سلة التسوق بمعلومات محددة
        function addToCartWithDetails(productId, productAttributeQuantityId, quantity) {
            // Create the data object to send in the request body
            const data = {
                ProductAttributeQuantityId: productAttributeQuantityId,
                Quantity: quantity
            };

            // Send an HTTP POST request to the server
            fetch('/api/Cart/addItem', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + authToken
                },
                body: JSON.stringify(data)
            })
                .then(response => {
                    if (!response.ok) {
                        return response.text().then(errorMsg => Promise.reject(new Error(errorMsg)));
                    }
                    return response.text();
                })
                .then(result => {
                    alert(result); // Show success message to the user
                    // Optionally, update UI or perform additional actions
                    window.location.href = 'front_cart'; 

                })
                .catch(error => {
                    alert(error.message); // Show error message to the user
                    console.error('Error adding item to cart:', error);
                });
        }
        function redirectToCheckout() {
            fetch('/api/Order/placeOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + authToken
                },
                body: JSON.stringify({
                    // Pass any required data for the order here, such as addressId
                    addressId: '123' // Replace with the actual addressId
                })
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to place order');
                    }
                    return response.json();
                })
                .then(data => {
                    // Order placed successfully, redirect to the checkout page
                    window.location.href = 'front_checkout'; // Replace 'front_checkout' with the actual URL of the checkout page
                })
                .catch(error => {
                    console.error('Error placing order:', error);
                    alert('Failed to place order. Please try again.');
                });
        }


        document.addEventListener("DOMContentLoaded", function () {
            // Event listener for the "showShippingLink" element
            var showShippingLink = document.getElementById("showShippingLink");
            showShippingLink.addEventListener("click", function (event) {
                event.preventDefault(); // Prevent the default click action
                showShippingModal(); // Call the function to show the shipping modal
            });

            // Event listener for the "closeShippingModalBtn" element
            var closeShippingModalBtn = document.getElementById("closeShippingModalBtn");
            closeShippingModalBtn.addEventListener("click", function () {
                closeShippingModal(); // Call the function to close the shipping modal
            });
        });
        // window.onload = function () {
        //     fetch(`https://localhost:7214/api/Product/productId?productId=${productId}`)
        //         .then(response => response.json())
        //         .then(data => {
        //             // Update main product image
        //             document.getElementById("main-product-image").src = data.MainImageURL;

        //             // Update thumbnai\
        /
        // l images
        //             data.ThumbnailImageURLs.forEach(function (url) {
        //                 var img = document.createElement("img");
        //                 img.src = url;
        //                 img.alt = "Thumbnail Product Image";
        //                 document.getElementById("thumbnail-container").appendChild(img);
        //             });
        //         })
        //         .catch(error => console.error('Error fetching data:', error));
        // };

        // function changeMainImage(url) {
        //     document.getElementById("main-product-image").src = url;
        // }

        // window.onload = function () {
        //     fetch("/your-api-endpoint/productId")
        //         .then(response => response.json())
        //         .then(data => {
        //             // Update main product image
        //             document.getElementById("main-product-image").src = data.MainImageURL;

        //             // Update thumbnail images
        //             data.ThumbnailImageURLs.forEach(function (url) {
        //                 var img = document.createElement("img");
        //                 img.src = url;
        //                 img.alt = "Thumbnail Product Image";
        //                 document.getElementById("thumbnail-container").appendChild(img);
        //             });
        //         })
        //         .catch(error => console.error('Error fetching data:', error));
        // };
        // // قم بجلب مصفوفة الصور من بيانات المنتج
        // var productImages = productData.productImages;

        // // إذا كانت هناك صور متوفرة للمنتج
        // if (productImages && productImages.length > 0) {
        //     // حدد عنصر الصور المصغرة
        //     var thumbnailContainer = document.getElementById("thumbnail-container");

        //     // حلق عبر كل صورة وأضفها كصور مصغرة
        //     productImages.forEach(function (image) {
        //         var img = document.createElement("img");
        //         img.src = image.url;
        //         img.alt = "Product Thumbnail";
        //         img.className = "thumbnail";
        //         img.addEventListener("click", function () {
        //             changeMainImage(image.url);
        //         });

        //         thumbnailContainer.appendChild(img);
        //     });
        // }

        // // Thumbnails array
        // var thumbnails = [
        //     "/Images/item_1.png",
        //     "/Images/item_2.png",
        //     "/Images/item_3.png",
        //     "/Images/item_4.png",
        //     "/Images/item_5.png",
        //     "/Images/item_6.png"
        // ];

        // // Add thumbnails dynamically
        // var thumbnailContainer = document.getElementById("thumbnail-container");

        // thumbnails.forEach(function (thumbnail) {
        //     var img = document.createElement("img");
        //     img.src = thumbnail;
        //     img.alt = "Product Thumbnail";
        //     img.className = "thumbnail";
        //     img.addEventListener("click", function () {
        //         changeMainImage(thumbnail);
        //     });

        //     thumbnailContainer.appendChild(img);
        // });

        function changeMainImage(newSrc) {
            var mainImage = document.getElementById('main-product-image');
            mainImage.src = newSrc;
        }
        // دالة لتقييم المنتج
        function rateProduct(stars) {
            // قم بتنفيذ الإجراءات اللازمة لتقييم المنتج
            console.log('تقييم المنتج بـ ' + stars + ' نجوم');

            // تحديد النجوم التي تم تقييمها بلون ذهبي
            var ratingStars = document.querySelectorAll('.rating-form .rating-stars span');
            ratingStars.forEach(function (star, index) {
                if (index < stars) {
                    star.classList.add('active');
                } else {
                    star.classList.remove('active');
                }
            });

            // حفظ التقييم في متغير لاستخدامه عند إرسال التقييم
            selectedRating = stars;
        }

        // دالة لإرسال التقييم
        function submitRating() {
            var userComment = document.getElementById('user-comment').value;
            // قم بإرسال التقييم والتعليق إلى الخادم
            console.log('تقييم المنتج والتعليق: ' + userComment + ', النجوم: ' + selectedRating);
            // بعد الإرسال، قم بتحديث قاعدة البيانات وعرض التقييمات المحدثة
            updateRatingsDisplay(userComment, selectedRating);
        }

        // دالة لتحديث عرض التقييمات بعد الإرسال
        function updateRatingsDisplay(comment, stars) {
            // قم بجلب التقييمات الجديدة من الخادم وتحديث الواجهة
            console.log('تم تحديث عرض التقييمات');
            // يمكنك إضافة التقييمات الجديدة إلى عنصر التقييمات في الصفحة
            var ratingsDisplay = document.getElementById('ratingsDisplay');

            // إنشاء عنصر التقييم الجديد
            var newRating = document.createElement('div');
            newRating.className = 'user-rating';
            newRating.innerHTML = '<div class="rating-stars">' + getStarsHtml(stars) + '</div><p>المستخدم: ' + comment + '</p>';

            // قم بإضافة التقييم الجديد إلى عرض التقييمات
            ratingsDisplay.appendChild(newRating);
        }

        // دالة للحصول على HTML للنجوم بناءً على عدد النجوم المحدد
        function getStarsHtml(stars) {
            var starsHtml = '';
            for (var i = 0; i < stars; i++) {
                starsHtml += '&#9733;';
            }
            return starsHtml;
        }

        // دالة لإظهار نموذج التقييم
        function showRatingForm() {
            var ratingForm = document.getElementById('ratingForm');
            ratingForm.style.display = 'block';
        }

        var selectedRating = 0; // تقييم المستخدم المحدد


        // قم بالوصول إلى العنصر select
        var quantitySelect = document.getElementById("quantitySelect");

        // حدث يتم تشغيله عند تغيير قيمة العنصر select
        function updateQuantityInput() {
            // قم بتحديث النص بجانب القائمة المنسدلة
            var selectedQuantity = quantitySelect.value;
            var quantityText = document.getElementById("quantityContainer").querySelector("span");
            quantityText.innerText = selectedQuantity;
        }
        function redirectToCheckout() {
            var checkoutPageURL = "front_checkout"; 
            window.location.href = checkoutPageURL;
        }
        // متغير لتتبع حالة المنتج (في السلة أو في قائمة الرغبات)
        var isInCart = false;

        // قم بتعريف دالة لفحص حالة تسجيل الدخول
        function checkLoginStatus() {
            // قم بالتحقق مما إذا كان هناك رمز مميز مخزن في تخزين المتصفح المحلي
            const authToken = localStorage.getItem('authToken');

            // قم بتحقق من وجود الرمز المميز
            const isLoggedIn = authToken !== null;

            return isLoggedIn;
        }



        // دالة لعرض رسالة تمت الإضافة
        function showAddMessage() {
            var addMessage = document.getElementById('addMessage');
            addMessage.style.display = 'block';

            // يمكنك إضافة أي تحسينات إضافية هنا، مثل إخفاء الرسالة بعد فترة زمنية قصيرة
            setTimeout(function () {
                addMessage.style.display = 'none';
            }, 3000); // يختفي الرسالة بعد 3 ثواني (يمكنك تعديل هذه الفترة حسب الحاجة)
        }
        document.addEventListener("DOMContentLoaded", function () {
            // دالة لحساب تاريخ التوصيل
            function calculateDeliveryDate() {
                var currentDate = new Date();
                var currentHour = currentDate.getHours();
                var deliveryDateStandard = new Date();
            

                // إذا كان الوقت الحالي أكبر من أو يساوي 12 مساءً، فالتوصيل سيكون في اليوم التالي
                if (currentHour >= 12) {
                    deliveryDateStandard.setDate(currentDate.getDate() + 1);
                   
                } else {
                    deliveryDateStandard.setDate(currentDate.getDate());
                   
                }

                // التوصيل العادي خلال 5 أيام
                deliveryDateStandard.setDate(deliveryDateStandard.getDate() + 5);

                // إضافة متغير currentHour إلى الكائن المرتجع
                return {
                    standard: deliveryDateStandard,
                    currentHour: currentHour,
                };
            }

            // دالة لتنسيق التاريخ إلى الصيغة "الجمعة، فبراير 23"
            function formatDate(date) {
                var options = { weekday: 'long', month: 'long', day: 'numeric' };
                return date.toLocaleDateString('ar-AR', options);
            }

            // دالة لتحديث معلومات التوصيل
            function updateDeliveryInfo() {
                var deliveryInfo = document.getElementById("deliveryInfo");
                var deliveryDate = calculateDeliveryDate();

                // حساب الوقت المتبقي للطلب
                var currentTime = new Date();
                var cutoffTime = new Date(currentTime);
                cutoffTime.setHours(24, 0, 0, 0); // منتصف الليل

                var timeDiff = cutoffTime - currentTime;
                var hoursRemaining = Math.floor(timeDiff / (1000 * 60 * 60));
                var minutesRemaining = Math.floor((timeDiff % (1000 * 60 * 60)) / (1000 * 60));

                var deliveryText = `
                    <p>التوصيل ${formatDate(deliveryDate.standard)}. أطلب خلال ${hoursRemaining} ساعة و ${minutesRemaining} دقيقة</p>
                `;

                deliveryInfo.innerHTML = deliveryText;
            }

            // استدعاء الدالة لإعداد معلومات التوصيل بشكل أولي
            updateDeliveryInfo();
        });

        function showShippingModal() {
            var shippingModal = document.getElementById("shippingModal");
            shippingModal.style.display = "block";
            updateShippingDetails();
        }

        function closeShippingModal() {
            var shippingModal = document.getElementById("shippingModal");
            shippingModal.style.display = "none";
        }

        function updateShippingDetails() {
            var shippingDetails = document.getElementById("shippingDetails");

            var price = product.productAttributeQuantities[0].price;
            var standardShippingFee = 15000;

            var total = price + standardShippingFee;

            // تحديد رمز العملة
            var currencySymbol = "ل.س ";

            // تنسيق الأرقام وإزالة الفواصل
            var formattedPrice = price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            var formattedShippingFee = standardShippingFee.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            var formattedTotal = total.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");

            var detailsText = `
            <h2>تفاصيل الشحن والرسوم</h2>
            <hr>
            <p class="align-right">السعر: <span class="align-left">${formattedPrice} ${currencySymbol}</span></p>
            <p class="align-right">رسوم الشحن من متجر القرطاسية: <span class="align-left">${formattedShippingFee} ${currencySymbol}</span></p>
            <hr>
            <p class="align-right">الإجمالي: <span class="align-left">${formattedTotal} ${currencySymbol}</span></p>
            <p class="red-bold-centered">الترجيع مجاني</p>
        `;


            shippingDetails.innerHTML = detailsText;
        }
       
    </script>

</body>
</html>
